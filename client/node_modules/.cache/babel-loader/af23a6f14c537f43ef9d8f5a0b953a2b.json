{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { DECREMENT, INCREMENT, RESET } from './actions';\nimport { useSelector } from \"react-redux\";\nimport * as counterSelectors from \"./selector\";\nconst initialState = {\n  count: 0\n};\n\nfunction GetCount() {\n  _s();\n\n  return useSelector(counterSelectors.count);\n}\n\n_s(GetCount, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = GetCount;\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('reducer', state, action);\n\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        count: GetCount() + 1\n      };\n\n    case DECREMENT:\n      return {\n        count: GetCount() - 1\n      };\n\n    case RESET:\n      return {\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCount\");","map":{"version":3,"sources":["D:/Desk/Rep/RKSP I/prakt5/rec/src/store/reducer.js"],"names":["DECREMENT","INCREMENT","RESET","useSelector","counterSelectors","initialState","count","GetCount","reducer","state","action","console","log","type"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA0C,WAA1C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,KAAKC,gBAAZ,MAAkC,YAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,SAASC,QAAT,GAAoB;AAAA;;AAChB,SAAOJ,WAAW,CAACC,gBAAgB,CAACE,KAAlB,CAAlB;AACH;;GAFQC,Q;UACEJ,W;;;KADFI,Q;AAIT,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB,EAA8BC,MAA9B;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKZ,SAAL;AACI,aAAO;AACHK,QAAAA,KAAK,EAAEC,QAAQ,KAAK;AADjB,OAAP;;AAGJ,SAAKP,SAAL;AACI,aAAO;AACHM,QAAAA,KAAK,EAAEC,QAAQ,KAAK;AADjB,OAAP;;AAGJ,SAAKL,KAAL;AACI,aAAO;AACHI,QAAAA,KAAK,EAAE;AADJ,OAAP;;AAGJ;AACI,aAAOG,KAAP;AAdR;AAgBH","sourcesContent":["import {DECREMENT, INCREMENT, RESET} from './actions';\r\nimport {useSelector} from \"react-redux\";\r\nimport * as counterSelectors from \"./selector\";\r\n\r\nconst initialState = {\r\n    count: 0\r\n};\r\n\r\nfunction GetCount() {\r\n    return useSelector(counterSelectors.count)\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    console.log('reducer', state, action);\r\n    switch(action.type) {\r\n        case INCREMENT:\r\n            return {\r\n                count: GetCount() + 1\r\n            };\r\n        case DECREMENT:\r\n            return {\r\n                count: GetCount() - 1\r\n            };\r\n        case RESET:\r\n            return {\r\n                count: 0\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}